{"version":3,"sources":["App.js","index.js"],"names":["Length","_ref","title","id","changeTime","type","time","formatTime","react_default","a","createElement","className","onClick","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","displayTime","setDisplayTime","_React$useState3","_React$useState4","breakTime","setBreakTime","_React$useState5","_React$useState6","sessionTime","setSessionTime","_React$useState7","_React$useState8","timerOn","setTimerOn","_React$useState9","_React$useState10","onBreak","setOnBreak","_React$useState11","Audio","breakAudio","playBreakSound","currentTime","play","minutes","Math","floor","amount","prev","seconds","formatTime2","Date","getTime","nextDate","onBreakVariable","interval","setInterval","localStorage","clear","setItem","clearInterval","getItem","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.716053c4.chunk.js","sourcesContent":["import React from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [displayTime, setDisplayTime] = React.useState(25 * 60);\n  const [breakTime, setBreakTime] = React.useState(5 * 60);\n  const [sessionTime, setSessionTime] = React.useState(25 * 60);\n  const [timerOn, setTimerOn] = React.useState(false);\n  const [onBreak, setOnBreak] = React.useState(false);\n  const[breakAudio] = React.useState(\n    new Audio(\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\")\n    );\n\n  const playBreakSound = () => {\n    breakAudio.currentTime = 0;\n    breakAudio.play();\n  };\n\n  const formatTime = (time) => {\n    let minutes = Math.floor(time / 60);\n    // let seconds = time % 60;\n    return (\n      (minutes < 10 ? minutes : minutes) \n      //   +\":\" +\n      // (seconds < 10 ? \"0\" + seconds : seconds)\n    );\n  };\n  const formatTime2 = (time) => {\n    let minutes = Math.floor(time / 60);\n    let seconds = time % 60;\n    return (\n      (minutes < 10 ? \"0\" + minutes : minutes) \n        +\":\" +\n      (seconds < 10 ? \"0\" + seconds : seconds)\n    );\n  };\n\n  const changeTime = (amount, type) => {\n    if (type === \"break\") {\n      if (breakTime <= 60 && amount < 0) {\n        return;\n      }\n      setBreakTime(prev => prev + amount);\n    } else {\n      if (sessionTime <= 60 && amount < 0) {\n        return;\n      }\n      setSessionTime((prev) => prev + amount);\n      if (!timerOn) {\n        setDisplayTime(sessionTime + amount);\n      }\n    }\n  };\n\n  const controlTime = () => {\n    let second = 1000;\n    let date = new Date().getTime();\n    let nextDate = new Date().getTime() + second;\n    let onBreakVariable = onBreak;\n    if(!timerOn){\n      let interval = setInterval(()=> {\n        date = new Date().getTime();\n        if(date > nextDate){\n          setDisplayTime((prev) => {\n            if (prev<=0 && !onBreakVariable){\n              playBreakSound();\n              onBreakVariable=true;\n              setOnBreak(true);\n              return breakTime;\n            } else if(prev <=0 && onBreakVariable){\n              playBreakSound();\n              onBreakVariable=false;\n              setOnBreak(false)\n              return sessionTime;\n            }\n            return prev - 1;\n          })\n          nextDate += second;\n        }\n      }, 60);\n      localStorage.clear();\n      localStorage.setItem('interval-id', interval);\n    }\n    if(timerOn){\n      clearInterval(localStorage.getItem(\"interval-id\"));\n    }\n    setTimerOn(!timerOn);\n  };\n\n  const resetTime = () => {\n    setDisplayTime(25 * 60);\n    setBreakTime(5 * 60);\n    setSessionTime(25 * 60);\n  };\n\n  return (\n    <div className=\"center-align\">\n      <h1>Pomodoro Clock</h1>\n      <div className=\"dual-container\">\n        <Length\n          title={\"Break Length\"}\n          id={\"break-label\"}\n          changeTime={changeTime}\n          type={\"break\"}\n          time={breakTime}\n          formatTime={formatTime}\n        />\n        <Length\n          title={\"Session Length\"}\n          id={\"session-label\"}\n          changeTime={changeTime}\n          type={\"session\"}\n          time={sessionTime}\n          formatTime={formatTime}\n        />\n      </div>\n      <h3 id=\"timer-label\">{onBreak ? \"Break\" : \"Session\"}</h3>\n        <h2 id=\"time-left\">{formatTime2(displayTime)}</h2>\n        <button id=\"start_stop\" className=\"btn-large #ffc400 amber accent-3\" onClick={controlTime}>\n          {timerOn ? (\n            <i className=\"material-icons\">pause_circle_filled</i>\n          ) : (\n            <i className=\"material-icons\">play_circle_filled</i>\n          )}\n        </button>\n        <button id=\"reset\" className=\"btn-large #ffc400 amber accent-3\" onClick={resetTime}>\n          <i className=\"material-icons\">autorenew</i>\n        </button>\n    </div>\n  );\n}\n\nfunction Length({ title, id, changeTime, type, time, formatTime }) {\n  return (\n    <div>\n      <h3 id={id}>{title}</h3>\n      <div className='time-sets'>\n        <button id={type+\"-decrement\"} className='btn-small #ffab00 amber accent-4'\n          onClick={() => changeTime(-60, type)}\n        >\n          <i className='material-icons'>arrow_downward</i>\n        </button>\n        <h4 id={type+\"-length\"}>{formatTime(time)}</h4>\n        <button id={type+\"-increment\"} className='btn-small #ffab00 amber accent-4'\n          onClick={() => changeTime(60, type)}\n        >\n          <i className='material-icons'>arrow_upward</i>\n        </button>\n        \n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n"],"sourceRoot":""}